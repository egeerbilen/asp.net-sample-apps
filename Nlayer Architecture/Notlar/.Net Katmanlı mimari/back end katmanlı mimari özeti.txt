1 - Core
	- Dto
	- Repository (Interface)
	- Service (Interface)
	- Unitofwork (Interface)
2 - Repository (entity framework kodları yani SQL bağlantı kodları olur) 
	- GenericRepository
		Tip olarak T type ve Dto type alır
		Dbcontext bağlantısı oluşturulur dbset ile veri tabanı tablolarımızın karşılını ayarlarız
		-> Get 
		-> GetAll 
		-> Add
		-> AddAll
		-> Deletea
		-> DelteAll
		-> Update
		-> UpdateAll
		-> Where
	- Özelleştirilmiş sınıflar (GenericRepository den miras almış sınıflar olabilir)
	- UnitOfWorks (Veri taanına yansıtılmadan önce işlemler bellek üzerinde tutulur ne zaman SaveChanges ya da SaveChangesAsync dersek o zaman veri tabanına yansıtır)
	- Seeds (Statik data lardır)
	- Migration (ORM ile seeds ve model dependency lerini bağladığı yer)
3 - Service (bussines kodlarımızın olduğu kısımdır)
	- GenericService
	- Özelleştirilmiş sınıflar (GenericService den miras almış sınıflar olabilir)
	- Mapper (mapleme işleleri burada yapılır)
	- Validation
    - Exceptions

4 - API Aplication Layer ile haberleşe katmandır
    - controller içerisinde Application Katmanının Back-end tarafına hangi url ler ile erişebileceğini belirtiriz
    - Program.cs bu uygulamanın main kısmıdır bir şey global ise burada tanımlanır
    - Appsettings.json DB Connection Settings burada yer alır
    - Modul katmanı Dependency ilişkileri burada yapılır ve Program.cs dosyası daha tamiz tutulur
    - Filters katmanını katmanı Id gerektiren isteklerde eğer Id değeri yoksa API katmanından service Katmanına İletilmeden hata gönderilir
    - Middlewares uygulamaya bir request geldiğinde ve ya response döndüğünde Middlewares e girer buraya Global exception Handler eklene bilir

1 -> 2 -> 3 -> 4 